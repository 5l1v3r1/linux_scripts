#!/bin/bash
VERSION="2.1"
# 2.1 - Updated lockfile code
# 1.0 - Clean release

# Check if running.
LOCKFILE="/tmp/.sync_youtube.lock"
if [ -f $LOCKFILE ]; then
echo "Script is locked, exiting."
exit 1
else touch $LOCKFILE
sleep 2
fi

WORKINGDIR="./Videos/.youtmp"
VIDEODIR="./Videos/NewStuff"
MUSICDIR="./Music/sortme"

# Youtube Playlists must be publicly available. Add them one line per playlist to process properly.
ARCHIVEPL=".Archive-List"
MUSICPL=".Music-List"
SUBSCRIBEPL=".Channel-List"

if [ ! "`which youtube-dl`" ]; then
read -r -p "    Youtube-dl not found, would you like to install it?             [Y/n]? " answer
    case $answer in
        [yY][eE][sS]|[yY]|'')
        sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl
        sudo chmod a+rx /usr/local/bin/youtube-dl
        ;;
        [nN][oO]|[nN])
        echo "Whatever, I'm out."
        rm $LOCKFILE
        exit 0
        ;;
    esac
fi

log_and_print ()
{
  echo "[*]   " $1
  logger sync_YouTube - $1
}

mkdir -p $WORKINGDIR
mkdir -p $VIDEODIR
mkdir -p $MUSICDIR
log_and_print "Starting sync process: `date`"
log_and_print "Updating youtube-dl ..."
sudo youtube-dl -U

cd $WORKINGDIR

touch .ytsync.log
log_and_print "Downloading videos from \"Archive\" playlist..."
youtube-dl -i --geo-bypass --no-mtime --add-metadata --restrict-filenames --download-archive .ytsync.log -a $ARCHIVEPL
sleep 1

log_and_print "Downloading latest videos from channels you subscribe to..."
youtube-dl -iq --geo-bypass --restrict-filenames --no-mtime --add-metadata --dateafter today-5days --download-archive .ytsync.log -a $SUBSCRIBEPL
sleep 1

if [ "`ls`" ]; then
mv * $VIDEODIR
sleep 1
fi

log_and_print "Downloading Music to convert to mp3..."
cd $MUSICDIR
touch .ytsync.log
youtube-dl -i --no-mtime --geo-bypass --add-metadata --extract-audio --audio-format mp3 --download-archive .ytsync.log "$MUSICPL"
sleep 1

log_and_print "Completed sync process: `date`"
rm $LOCKFILE

exit 0
